.Header {
  min-width: $root-minWidth;
  mix-blend-mode: difference;
  padding-top: rem($space-m);
  pointer-events: none;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: $Header-zIndex;

  @include mq(m) {
    padding-top: rem($space-ml);
  }

  @include mq(l) {
    padding-top: rem($space-l);
  }
}

.Header-logo, .Header-button, .Header-secondary {
  .App:not(.is-transition) & {
    pointer-events: all;
  }

  .Header.is-disabled & {
    pointer-events: none;
  }
}

.Header-ctrl {
  align-items: center;
  display: flex;
}

.Header-logo,
.Header-button-text-item {
  height: rem($space-ml);
  line-height: rem($space-ml);

  @include mq(m) {
    @include fontSize($h5-fontSizeMin, false, $h5-fontSizeMax);
  }
}

.Header-logo {
  color: $text-10;
  display: flex;
  flex-direction: column;
  margin: 0 auto 0 0;
  overflow: hidden;
  position: relative;
  z-index: 1;

  a {
    color: $text-10;
  }

  @include mq(m) {
    margin: 0;
  }
}

.Header-logo-reveal {
  left: 0;
  position: absolute;
  top: 0;
}

.Header-separator {
  display: none;

  @include mq(m) {
    align-items: center;
    display: flex;
    flex-direction: column;
    height: rem($space-ml);
    justify-content: center;
    margin: 0 rem($space-s);
    overflow: hidden;
    position: relative;
    width: rem($space * 1.25);
    z-index: 1;
  }
}

.Header-separator-line {
  background: $bg-10;
  display: block;
  height: 2px;
  position: absolute;
  width: 100%;

  @include mq(xxxxl) {
    height: 3px;
  }
}

.Header-button {
  align-items: center;
  color: $text-10;
  display: flex;
  margin: 0;
  z-index: 1;
}

.Header-button-textMobile {
  line-height: rem($space-ml);
  margin-right: rem($space-s);
  overflow: hidden;
  position: relative;

  @include mq(m) {
    display: none;
  }
}

.Header-button-textMobile-reveal {
  left: 0;
  position: absolute;
  top: 0;
}

.Header-button-text {
  position: relative;

  @include mq($until: m) {
    display: none;
  }
}

.Header-button-text-item {
  margin-right: rem($space);
  overflow: hidden;
  text-align: left;
}

.Header-button-text-item--reveal {
  bottom: 0;
  left: 0;
  position: absolute;
  width: rem($space * 20);
}

.Header-button-arrow {
  .Button--arrow {
    margin: 0;
  }

  @include mq($until: m) {
    opacity: 1 !important;
    transform: none !important;
  }
}

.Header-secondary {
  display: none;

  @include mq(m) {
    @include text(l);
    display: flex;
    margin-left: auto;

    a {
      color: $text-10;
    }
  }
}

.Header-secondary-item {
  margin-left: rem($space-m);
  overflow: hidden;
  position: relative;
}

.Header-secondary-item-reveal {
  left: 0;
  position: absolute;
  top: 0;
}

/* ======
 * Mask
 * ====== */

.Header-mask {
  background: $bg-700;
  clip-path: circle(0% at 0px 0px);

  // clip-path: circle(150% at 480px 64px) !important;
  // display: flex !important;

  display: none;
  flex-direction: column;
  inset: 0;
  min-width: 300px;
  position: fixed;
  z-index: $Header-maskZindex;

  &.is-open {
    display: flex;
  }

  &:before {
    background: linear-gradient($primary 25%, rgba($primary, 0));
    content: '';
    height: rem($space * 8);
    left: 0;
    pointer-events: none;
    position: fixed;
    right: 0;
    z-index: 1;

    @include mq(m) {
      height: rem($space * 8);
    }

    @include mq(l) {
      height: rem($space * 10);
    }
  }
}

.Header-nav {
  // margin: max(25vh, #{rem($space * 6)}) auto auto auto;
  margin: max(20vh, #{rem($space * 6)}) auto auto auto;
  width: 100%;
  z-index: 0;

  @include mq(m) {
    // margin-top: max(22.5vh, #{rem($space * 8)});
    margin-top: max(20vh, #{rem($space * 9)});
  }
}

.Header-nav-item {
  overflow: hidden;
  position: relative;
  transition: border-radius $trans-primaryFastest;
  z-index: 1;

  &:first-child, &:nth-child(2), &:nth-last-child(1) {
  // &:first-child,  &:nth-last-child(1), &:nth-last-child(2) {
    .Header-nav-link {
      &:before, &:after {
        border: 0;
      }
    }
  }

  &.is-active {
    .Header-nav-link-text:after {
      // opacity: 1;
    }
  }

  @include mq(m) {
    @for $i from 2 through 12 {
      &:nth-child(#{$i}) {
        .Header-nav-link {
          &:before {
            flex-basis: calc((var(--wrap-spaceLeft) + #{rem($space)}) * #{$i});
          }
        }
      }
    }

    @for $i from 6 through 8 {
      &:nth-child(#{$i}) {
        .Header-nav-link {
          &:before {
            flex: 1;
          }

          &:after {
            flex: 0;
            flex-basis: calc((var(--wrap-spaceLeft) + #{rem($space * 4)}) * #{$i - 4});
          }
        }

        .Header-nav-link-inner {
          flex-direction: row-reverse;
        }

        .Header-nav-link-eye {
          margin-right: rem($space);
        }
      }
    }

    &:nth-child(5) {
      .Header-nav-link {
        &:before {
          flex: 1;
        }

        &:after {
          flex: 0;
          flex-basis: calc((var(--wrap-spaceRight) - #{rem($space-s)}));
        }
      }

      .Header-nav-link-inner {
        flex-direction: row-reverse;
      }

      .Header-nav-link-eye {
        margin-right: rem($space);
      }
    }
  }
}

.Header-nav-marquee, .Header-nav-link {
  // @include fontSize(14px, 14px, 48px, 4vw);
  // @include fontSize(14px, 14px, 48px, 2.75vw);
  @include fontSize(14px, 14px, 72px, 3.5vw);
  font-weight: $heading-fontWeightLight;
  text-transform: uppercase;
  white-space: nowrap;
}

.Header-nav-link {
  align-items: center;
  color: $text-10;
  display: flex;
  padding: rem($space-s) 0;
  // padding: rem($space) 0;

  &:hover {
    color: $text-10;
  }

  &:before, &:after {
    border-top: 1px solid $border-500;
    content: '';
  }

  &:before {
    flex-basis: calc(var(--wrap-spaceLeft) - #{rem($space-s)});
    margin-right: rem($space-s);

    // @include mq($until: m) {
    //   flex-basis: calc(var(--wrap-spaceLeft) - #{rem($space-s)});
    //   margin-right: rem($space-s);
    // }
  }

  &:after {
    flex: 1;
    margin-left: rem($space-s);

    // @include mq($until: m) {
    //   margin-left: rem($space-s);
    // }
  }
}

.Header-nav-link-inner {
  display: flex;
  pointer-events: none;
}

.Header-nav-link-text {
  position: relative;

  &:after {
    border-bottom-style: solid;
    border-bottom-width: 1px;
    bottom: 0;
    content: '';
    left: 0;
    opacity: 0;
    position: absolute;
    transition: opacity $trans-primary;
    width: 100%;
  }
}

.Header-nav-link-eye {
  height: 100%;
  margin: 0 rem($space-s) 0 rem($space);
  width: clamp(rem($space * 3), 10vw, rem($space * 5));

  circle {
    &:nth-child(2) {
      fill: var(--Header-marquee-iris, var(--white));
    }
  }

  path {
    &:first-child {
      stroke: $border-500;
      stroke-width: rem(7px);
    }
  }
}

.Header-nav-marquee {
  background: $primary-negative;
  inset: 0;
  overflow: hidden;
  pointer-events: none;
  position: absolute;
}

.Header-nav-marquee-inner {
  height: 100%;
  width: 100%;
}

.Header-nav-marquee-inner-self {
  align-items: center;
  display: flex;
  height: 100%;
  width: fit-content;
}

.Header-nav-marquee-eye {
  flex-shrink: 0;
  margin: 0 rem($space-s);
  width: clamp(rem($space * 3), 10vw, rem($space * 6));

  circle {
    &:nth-child(2) {
      fill: var(--Header-marquee-iris, var(--white));
    }
  }
}

.Header-footer {
  align-items: flex-end;
  color: $text-10;
  display: flex;
  margin: max(5vh, #{rem($space * 6)}) 0 rem($space-xl) 0;

  a {
    color: $text-10;
  }

  @include mq($until: m) {
    @include text(xs);
  }
}

.Header-links {
  display: flex;
  flex-wrap: wrap;
}

.Header-links-item {
  margin-right: rem($space-xs);
}

.Header-links--mobile {
  flex-direction: column;

  @include mq($until: xs) {
  }

  @include mq(xs) {
    justify-content: center;
  }
}

.Header-copyright {
  margin: 0 0 0 auto;
  text-align: right;
}
