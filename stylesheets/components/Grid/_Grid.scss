/* =======================================
 * Grid
 * ======================================= */

.Grid {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  margin-bottom: 0;
  margin-left: rem(-($Grid-gutter));
  margin-right: rem(-($Grid-gutter));
}

.Grid-cell {
  max-width: 100%;
  padding-left: rem($Grid-gutter);
  padding-right: rem($Grid-gutter);
  width: 100%;
}


/* ======
 * Sizing & Layout
 * ====== */

@mixin GridSize($amount: 0) {
  margin-left: rem(-($Grid-gutter * $amount));
  margin-right: rem(-($Grid-gutter * $amount));

  > .Grid-cell {
    padding-left: rem($Grid-gutter * $amount);
    padding-right: rem($Grid-gutter * $amount);
  }
}

.Grid {
  &.-auto {
    > .Grid-cell:not([class*="Width"]) {
      flex: 1 0 0%;
      width: auto;
    }
  }

  &.-equalHeight {
    > .Grid-cell {
      display: flex;
      flex-wrap: wrap;
    }
  }

  &.-full {
    @include GridSize();
  }

  &.-l {
    @include mq(s) {
      @include GridSize(2);
    }
  }
}


/* ======
 * Justify
 * ====== */

@mixin GridJustify($bp: '') {
  .Grid.-justifyAround#{$bp}  { justify-content: space-around; }
  .Grid.-justifyBetween#{$bp} { justify-content: space-between; }
  .Grid.-justifyCenter#{$bp}  { justify-content: center; }
  .Grid.-justifyEnd#{$bp}     { justify-content: flex-end; }
}

@if $Grid-justify {
  @include GridJustify();
}

@if $Grid-justify\@s {
  &\@s {
    @include mq(s) {
      @include GridJustify(\@s);
    }
  }
}

@if $Grid-justify\@m {
  &\@m {
    @include mq(m) {
      @include GridJustify(\@m);
    }
  }
}

@if $Grid-justify\@l {
  &\@l {
    @include mq(l) {
      @include GridJustify(\@l);
    }
  }
}


/* ======
 * Cell align
 * ====== */

@mixin GridAlign($bp: '') {
  .Grid.-alignEnd#{$bp}    { align-items: flex-end; }
  .Grid.-alignCenter#{$bp} { align-items: center; }
  .Grid.-alignStart#{$bp}  { align-items: flex-start; }
}

@if $Grid-align {
  @include GridAlign();
}

@if $Grid-align\@s  {
  @include mq(s) {
    @include GridAlign(\@s);
  }
}

@if $Grid-align\@m  {
  @include mq(m) {
    @include GridAlign(\@m);
  }
}

@if $Grid-align\@l  {
  @include mq(l) {
    @include GridAlign(\@l);
  }
}


/* ======
 * Cell width
 * ====== */

@mixin GridCellWidth($bp: '') {
  .Grid-cell {
    &.-width--1\/12#{$bp}  { width: 8.333%; }
    &.-width--2\/12#{$bp}  { width: 16.666%; }
    &.-width--3\/12#{$bp}  { width: 25%; }
    &.-width--4\/12#{$bp}  { width: 33.333%; }
    &.-width--5\/12#{$bp}  { width: 41.666% }
    &.-width--6\/12#{$bp}  { width: 50%; }
    &.-width--7\/12#{$bp}  { width: 58.333%; }
    &.-width--8\/12#{$bp}  { width: 66.666%; }
    &.-width--9\/12#{$bp}  { width: 75%; }
    &.-width--10\/12#{$bp} { width: 83.333%; }
    &.-width--11\/12#{$bp} { width: 91.666%; }
    &.-width--12\/12#{$bp} { width: 100%; }
  }
}

@if $Grid-cellWidth {
  @include GridCellWidth();
}

@if $Grid-cellWidth\@s {
  @include mq(s) {
    @include GridCellWidth(\@s);
  }
}

@if $Grid-cellWidth\@m {
  @include mq(m) {
    @include GridCellWidth(\@m);
  }
}

@if $Grid-cellWidth\@l {
  @include mq(l) {
    @include GridCellWidth(\@l);
  }
}


/* ======
 * Cell position
 * ====== */

@mixin GridPush($bp: '') {
  .Grid-cell {
    &.-push--6\/12#{$bp} { margin-left: 50%; }
  }
}

@include GridPush();