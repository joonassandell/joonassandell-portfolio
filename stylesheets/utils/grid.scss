@use 'stylesheets/mixins' as *;

.grid {
  --grid-gap: var(--grid-gap-m);
  display: grid;
  gap: var(--grid-gap);
  grid-template-columns: repeat(12, 1fr);
}

/* =======================================
 * Gap
 * ======================================= */

.grid {
  &.-gap\:0 {
    gap: 0;
  }

  &.-gap\:l {
    --grid-gap: var(--grid-gap-l);
  }

  &.-gap\:row\:0 {
    row-gap: 0;
  }

  &.-gap\:row\:l {
    row-gap: var(--grid-gap-row-l);
  }

  &.-gap\:column\:0 {
    column-gap: 0;
  }
}

/* =======================================
 * Placement
 * ======================================= */

.grid {
  &.-place\:end {
    place-items: end;
  }
}

/* =======================================
 * Columns
 * ======================================= */

.grid-col {
  --grid-span: 12;
  grid-column: span var(--grid-span, 12) / span var(--grid-span, 12);
}

@mixin gridColumns($breakpoint: null) {
  $breakpoint: if($breakpoint, \@#{$breakpoint}, null);

  @for $i from 1 through 12 {
    .grid-col\:#{$i}#{$breakpoint} {
      --grid-span: #{$i};
    }

    .grid-col.-start\:#{$i}#{$breakpoint} {
      grid-column-start: #{$i};
    }
  }
}

.grid-col.-start {
  grid-column-start: 1;
}

.grid-col.-end {
  grid-column-end: -1;
}

.grid-col.-align\:end {
  align-self: end;
}

.grid-col.-align\:center {
  align-self: center;
}

@include gridColumns();

@include mq(s) {
  @include gridColumns(s);
}

@include mq(m) {
  @include gridColumns(m);
}

@include mq(l) {
  @include gridColumns(l);
}

@include mq(xl) {
  @include gridColumns(xl);
}
