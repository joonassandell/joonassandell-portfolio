.grid {
  --grid-gap: #{rem($grid-gap)};
  display: grid;
  grid-template-columns: repeat($grid-columns, 1fr);

  > * {
    --grid-span: 12;
    grid-column: span var(--grid-span, #{$grid-columns}) / span var(--grid-span, #{$grid-columns});
  }

  @include mq(xs) {
    column-gap: var(--grid-gap);
  }
}


/* ======
 * Sizing & Layout
 * ====== */

.grid {
  &.-auto {
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));

    > * { --grid-span: span; }
  }

  &.-size\:l {
    @include mq(m) {
      --grid-gap: #{rem($grid-gap-l)};
    }
  }

  &.-size\-full { --grid-gap: 0; }

  &.-justify\:center { justify-items: center; }
}


/* ======
 * Columns
 * ====== */

@mixin gridColumns($breakpoint: null) {
  $breakpoint: if($breakpoint, \@#{$breakpoint}, null);

  @for $i from 1 through $grid-columns {
    .grid-col\:#{$i}#{$breakpoint} { --grid-span: #{$i}; }
    .grid-col.-start\:#{$i}#{$breakpoint} { grid-column-start: #{$i}; }
    .grid-col.-end\:#{$i+1}#{$breakpoint} { grid-column-end: #{$i+1}; }
  }
}

.grid-col.-start { grid-column-start: 1; }
.grid-col.-end   { grid-column-end: -1; }
.grid-col.-align\:end   { align-self: end; }
.grid-col.-align\:center   { align-self: center; }


@include gridColumns();
// @include mq(xs) { @include gridColumns(xs); }
@include mq(s) { @include gridColumns(s); }
@include mq(m) { @include gridColumns(m); }
@include mq(l) { @include gridColumns(l); }
@include mq(xl) { @include gridColumns(xl); }
