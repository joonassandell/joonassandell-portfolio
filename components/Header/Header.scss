@use 'stylesheets/config' as *;
@use 'stylesheets/mixins' as *;

/**
 * 1. For the mask scrolling and everything else to work below Header
 * 2. Fix for Windows font rendering. This is needed because there's
 *    mix-blend mode which adds odd text rendering in Windows.
 * 3. Note that the :root.is-transition class disables the pointer-events
 *    especially for the main nav link hovers. This is here to ensure the
 *    events are disabled because the root class is removed before the mask is
 *    animated away.
 */
.Header {
  --focus-visible-bg: var(--bg-50);
  --focus-visible-fg: var(--text-900);
  --link: var(--text-50);
}

.Header-main {
  align-items: flex-end;
  display: flex;
  height: var(--Header-height);
  inset: 0 0 auto 0;
  min-width: var(--root-min-width);
  mix-blend-mode: difference;
  pointer-events: none; // [1.]
  position: fixed;
  z-index: var(--z-index-900);

  // [2.]
  .is-windows & {
    --link: var(--gray-300);

    &,
    .Header-button {
      color: var(--gray-300);
    }
  }
}

.Header-logo,
.Header-button,
.Header-secondary {
  :root:not(.is-transition) & {
    pointer-events: all;
  }

  .Header-main.is-disabled & {
    pointer-events: none;
  }
}

.Header-ctrl {
  align-items: center;
  display: flex;
}

.Header-logo,
.Header-button-text-item {
  height: rem($space-ml);
  line-height: rem($space-ml);

  @include mq(m) {
    @include fontSize($h5-font-size-min, false, $h5-font-size-max);
  }
}

.Header-logo {
  --link-hover-opacity: 1;
  display: flex;
  flex-direction: column;
  margin: 0 auto 0 0;
  overflow: hidden;
  position: relative;
  z-index: 1;

  @include mq(m) {
    margin: 0;
  }
}

.Header-logo-reveal {
  left: 0;
  position: absolute;
  top: 0;
}

.Header-separator {
  display: none;

  @include mq(m) {
    align-items: center;
    display: flex;
    flex-direction: column;
    height: rem($space-ml);
    justify-content: center;
    margin: 0 rem($space-s);
    overflow: hidden;
    position: relative;
    width: rem($space * 1.25);
    z-index: 1;
  }
}

.Header-separator-line {
  background: var(--border-50);
  display: block;
  height: var(--border-width-l);
  position: absolute;
  width: 100%;
}

.Header-button {
  align-items: center;
  color: var(--text-50);
  display: flex;
  margin: 0;
  z-index: 1;

  &:focus-visible {
    .Button--arrow {
      outline: var(--border-width) solid var(--border-50);
      outline-offset: $space-3xs;
    }
  }
}

.Header-button-textMobile {
  display: block;
  line-height: rem($space-ml);
  margin-right: rem($space-s);
  overflow: hidden;
  position: relative;

  @include mq(m) {
    display: none;
  }
}

.Header-button-textMobile-reveal {
  left: 0;
  position: absolute;
  top: 0;
}

.Header-button-text {
  position: relative;

  @include mq($until: m) {
    display: none;
  }
}

.Header-button-text-item {
  display: block;
  margin-right: rem($space);
  overflow: hidden;
  text-align: left;
}

.Header-button-text-item--reveal {
  bottom: 0;
  left: 0;
  position: absolute;
  width: rem($space * 20);
}

.Header-button-arrow {
  .Button--arrow {
    margin: 0;
  }
}

.Header-secondary {
  display: none;

  @include mq(m) {
    display: flex;
    margin-left: auto;
  }

  @include mq(ml) {
    @include text(l);
  }
}

.Header-secondary-item {
  overflow: hidden;
  position: relative;

  &:not(:first-child) {
    margin-left: rem($space-s);

    @include mq(ml) {
      margin-left: rem($space-m);
    }
  }
}

.Header-secondary-item-reveal {
  left: 0;
  position: absolute;
  top: 0;
}

/* =======================================
 * Mask
 * ======================================= */

.Header-mask {
  background: var(--bg-900);
  clip-path: circle(0% at 0px 0px);
  display: none;
  flex-direction: column;
  inset: 0;
  min-width: var(--root-min-width);
  position: fixed;
  z-index: var(--z-index-800);

  &.is-open {
    display: flex;
  }

  // [3.]
  &.is-disabled {
    pointer-events: none;
  }

  &:before {
    background: linear-gradient(var(--bg-900) 40%, transparent);
    content: '';
    height: rem($space * 8);
    left: 0;
    pointer-events: none;
    position: fixed;
    right: 0;
    z-index: 1;

    @include mq(m) {
      height: rem($space * 8);
    }

    @include mq(l) {
      height: rem($space * 11);
    }
  }
}

.Header-nav {
  margin: max(16.5vh, #{rem($space * 7)}) auto auto;
  width: 100%;
  z-index: 0;

  @include mq(m) {
    margin-top: max(25vh, #{rem($space * 9)});
  }
}

.Header-nav-item {
  overflow: hidden;
  position: relative;
  transition: border-radius var(--trans-primary-fastest);
  z-index: 1;

  &:last-child {
    .Header-nav-link {
      &:before,
      &:after {
        border: 0;
      }
    }
  }

  @include mq(m) {
    @for $i from 2 through 4 {
      &:nth-child(#{$i}) {
        .Header-nav-link {
          &:before {
            flex-basis: calc((var(--wrap-space-left) + #{rem($space)}) * #{$i});
          }
        }
      }
    }

    @for $i from 5 through 6 {
      &:nth-child(#{$i}) {
        .Header-nav-link {
          &:before {
            flex: 1;
          }

          &:after {
            flex: 0;
            flex-basis: calc(
              (var(--wrap-space-left) + #{rem($space * 4)}) * #{$i - 4}
            );
          }
        }

        .Header-nav-link-inner {
          flex-direction: row-reverse;
        }

        .Header-nav-link-eye {
          margin-right: rem($space);
        }
      }
    }
  }
}

.Header-nav-marquee,
.Header-nav-link {
  @include fontSize(14px, 14px, 72px, 3.5vw);
  font-weight: var(--font-weight-100);
  text-transform: uppercase;
  white-space: nowrap;
}

.Header-nav-link {
  align-items: center;
  color: var(--text-50);
  display: flex;
  padding: rem($space-s) 0;

  &:before,
  &:after {
    border-top: var(--border-width-s) solid var(--border-800);
    content: '';
    transition: border-color var(--trans-primary);
  }

  &:before {
    flex-basis: calc(var(--wrap-space-left) - #{rem($space-s)});
    margin-right: rem($space-s);
  }

  &:after {
    flex: 1;
    margin-left: rem($space-s);
  }

  .Header-nav-item.is-active & {
    &:before,
    &:after {
      border-color: var(--border-50);
    }
  }
}

.Header-nav-link-inner {
  align-items: center;
  display: flex;
  pointer-events: none;
}

.Header-nav-link-text {
  position: relative;
}

.Header-nav-link-eye {
  margin: 0 rem($space-s) 0 rem($space);
  width: clamp(rem($space * 3), 10vw, rem($space * 5));

  circle {
    &:nth-child(2) {
      fill: var(--Header-marquee-iris, var(--white));
    }
  }

  path {
    &:first-child {
      stroke: var(--border-700);
      stroke-width: 4px;
    }
  }
}

.Header-nav-marquee {
  background: var(--tone-50);
  color: var(--text-900);
  inset: 0;
  overflow: hidden;
  pointer-events: none;
  position: absolute;
}

.Header-nav-marquee-inner {
  height: 100%;
  width: 100%;
}

.Header-nav-marquee-inner-self {
  align-items: center;
  display: flex;
  height: 100%;
  width: fit-content;
}

.Header-nav-marquee-eye {
  flex-shrink: 0;
  margin: 0 rem($space-s);
  width: clamp(rem($space * 3), 10vw, rem($space * 5));

  circle {
    &:nth-child(2) {
      fill: var(--Header-marquee-iris, var(--white));
    }
  }

  path {
    &:first-child {
      stroke-width: 4px;
    }
  }
}

.Header-footer {
  display: flex;
  margin: max(7.5vh, #{rem($space-l)}) 0 rem($space-ml) 0;

  @include mq($until: m) {
    @include text(s);
  }

  @include mq(m) {
    margin-bottom: rem($space-xl);
  }

  @include mq(l) {
    margin-bottom: rem($space-2xl);
  }
}

.Header-footer-links {
  display: flex;
  flex-direction: column;
  gap: rem($space-xs);

  @include mq(l) {
    gap: rem($space-4xs);
  }
}

.Header-footer-right {
  display: flex;
  flex-direction: column;
  margin-left: auto;
  text-align: right;

  @include mq(m) {
    .Header-footer-links {
      display: none;
    }
  }
}

.Header-footer-copyright {
  margin: auto 0 0 0;
}
